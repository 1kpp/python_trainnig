{"name": "test_add_group[None:name\\:headeroh^)p'xKJGx>,\".pD:footer]", "status": "failed", "statusDetails": {"message": "AssertionError: assert [2:::, 3:name...)W:footerwio<] == [2:::, 3:name...>,\".pD:footer]\n  Right contains one more item: None:name\\:headeroh^)p'xKJGx>,\".pD:footer\n  Use -v to get the full diff", "trace": "app = <fixture.application.Application object at 0x0000025C0E90D220>, db = <fixture.db.DbFixture object at 0x0000025C0E90D2E0>\njson_groups = None:name\\:headeroh^)p'xKJGx>,\".pD:footer, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with allure.step('Given a group list'):\n            old_groups = db.get_group_list()\n        with allure.step('When i add a group %s to the list' % group):\n            app.group.create(group)\n        with allure.step('Then the new group list is equal to the old list with the added one'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(new_groups, key=Group.max_id) == sorted(old_groups, key=Group.max_id)\nE           assert [2:::, 3:name...)W:footerwio<] == [2:::, 3:name...>,\".pD:footer]\nE             Right contains one more item: None:name\\:headeroh^)p'xKJGx>,\".pD:footer\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError"}, "steps": [{"name": "Given a group list", "status": "passed", "start": 1618256614012, "stop": 1618256614013}, {"name": "When i add a group None:name\\:headeroh^)p'xKJGx>,\".pD:footer to the list", "status": "passed", "start": 1618256614013, "stop": 1618256615133}, {"name": "Then the new group list is equal to the old list with the added one", "status": "failed", "statusDetails": {"message": "AssertionError: assert [2:::, 3:name...)W:footerwio<] == [2:::, 3:name...>,\".pD:footer]\n  Right contains one more item: None:name\\:headeroh^)p'xKJGx>,\".pD:footer\n  Use -v to get the full diff\n", "trace": "  File \"C:\\Users\\Shurygin_M\\Documents\\GitHub\\python_trainnig\\test\\test_add_group.py\", line 15, in test_add_group\n    assert sorted(new_groups, key=Group.max_id) == sorted(old_groups, key=Group.max_id)\n"}, "start": 1618256615133, "stop": 1618256615134}], "parameters": [{"name": "json_groups", "value": "None:name\\:headeroh^)p'xKJGx>,\".pD:footer"}], "start": 1618256614012, "stop": 1618256615135, "uuid": "3579a175-5966-4b8b-8513-b3b485f9274b", "historyId": "3323b5ca2d5c598834e13e3f77fa3317", "testCaseId": "8e9b1d07ef6cdb67de3c4a3d82e10652", "fullName": "test.test_add_group#test_add_group", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_group"}, {"name": "host", "value": "KOMPyKTEP"}, {"name": "thread", "value": "11244-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_group"}]}